name: Pull Request Workflow

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
  CYPRESS_INSTALL_BINARY: 0

on:
  pull_request:
    branches:
      - main
      - beta
      - alpha

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci --cache ~/.npm --prefer-offline
  build:
    needs:
      - install
    name: Building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Building
        run: npm run build -- --base=remotes/origin/${{github.event.pull_request.base.ref}}
  lint:
    needs:
      - install
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - run: git fetch origin ${{github.event.pull_request.base.ref}}
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run lint -- --base=remotes/origin/${{github.event.pull_request.base.ref}}
        env:
          CI: true
  list_of_affected:
    needs:
      - install
    name: 'Compute lis of affected libs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: echo "::set-output name=projectMatrix::$(npx nx print-affected --target test --select tasks.target.project --base=remotes/origin/${{github.event.pull_request.base.ref}})"
        id: set-project-matrix
      - uses: actions/github-script@v5
        id: parsed-project-matrix
        env:
          PROJECTS: '${{ steps.set-project-matrix.outputs.projectMatrix }}'
        with:
          script: |
            return process.env.PROJECTS.split(',').map(p => p.trim());
    outputs:
      matrix: ${{ steps.parsed-project-matrix.outputs.result }}
  test:
    needs:
      - list_of_affected
    strategy:
      matrix:
        package: ${{ fromJSON(needs.list_of_affected.outputs.matrix) }}
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npx nx test ${{ matrix.package }} --coverage --coverageReporters lcov
      - uses: codecov/codecov-action@v2
        with:
          directory: ./coverage/${{ matrix.package }}/
          flags: summary,${{ matrix.package }}
          name: ${{ matrix.package }}
          token: ${{ secrets.CODECOV_TOKEN }}
